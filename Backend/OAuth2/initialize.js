// ...at top of file
var u = require('url');
var crypto = require('crypto');
var 
const http = require("http");

const { brotliDecompressSync } = require('zlib');

const http = require("http");
const host = 'localhost';
const port = 8000;


/**
* Generates the "Authorization" HTTP header for using the Onshape API
*
* @param {string} method - Request method; GET, POST, etc.
* @param {string} url - The full request URL
* @param {string} nonce - 25-character nonce (generated by you)
* @param {string} authDate - UTC-formatted date string (generated by you)
* @param {string} contentType - Value of the "Content-Type" header; generally "application/json"
* @param {"XwNI0TqlzbNlUJpWnJQ7NA8K"} accessKey - API access key
* @param {"5SC3S6BJR7TJXQBHBKYOMUABPYSDHJCOWU5KVQPN7CB42QBIQBOQ===="} secretKey - API secret key
*
* @return {string} Value for the "Authorization" header
*/
function createSignature(method, url, nonce, authDate, contentType, accessKey, secretKey) {
    var urlObj = u.parse(url);
    var urlPath = urlObj.pathname;
    var urlQuery = urlObj.query ? urlObj.query : ''; // if no query, use empty string

    var str = (method + '\n' + nonce + '\n' + authDate + '\n' + contentType + '\n' +
        urlPath + '\n' + urlQuery + '\n').toLowerCase();

    var hmac = crypto.createHmac('sha256', secretKey)
        .update(str)
        .digest('base64');

    var signature = 'On ' + accessKey + ':HmacSHA256:' + hmac;
    return signature;
}

//Url  used to retrieve Code for Oauth2
//https://oauth.onshape.com/oauth/authorize?response_type=code&client_id=EISZOODI34HKXKFRQKBKFPWXOLSR5NBBGR2BIAQ=

//send request to onshape oauth and have user log in.
//retrieve token and store it short term
//send that token to https://oauth.onshape.com/oauth/token along with client ID and client secret

fetch('https://oauth.onshape.com/oauth/token', {
    method: 'POST',
    headers:{
        'Content-Type': 'application/x-www-form-urlencoded'
    },
    body: new URLSearchParams({
        'grant_type': 'authorization_code',
        'code': ,
        'client_id': 'EISZOODI34HKXKFRQKBKFPWXOLSR5NBBGR2BIAQ=',
        'client_secret': '5SC3S6BJR7TJXQBHBKYOMUABPYSDHJCOWU5KVQPN7CB42QBIQBOQ===='
    })

})

